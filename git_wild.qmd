---
title: "Wild Git Collaboration Practice"
format: 
  html:
    code-fold: show
execute: 
  warning: false
  message: false
---


# load libraries
```{r}
library(ggplot2)
library(tidyverse)
```



## STEP 5: No merge conflicts!

```{r partner 1}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a plot of price vs. carat (or some other
### variables of your choice)


data(diamonds) 

ggplot(diamonds, aes( x = carat, y = price)) +
  geom_point()


```

```{r partner 2}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a subset based on filtering, e.g., 
### size greater than 1 carat or cut is "Ideal"

library(tidyverse) 
data(diamonds)

diamondsfilt <- diamonds|>
  filter(price >= 1000)

```

## STEP 7: Uh oh, merge conflicts!

```{r break-it-1}

### Both partners - delete this comment, then write some code here
# go brensketballers 
diamondsthing <- plot(diamonds$price ~ diamonds$cut)

ggplot(diamonds, aes(x = cut, y = price)) +
         geom_bar(stat = "identity")

#boxplot of something?? not sure 
```

## STEP 11: And even more merge conflicts!

```{r break-it-2}
diamond_broke <- diamondsfilt|>
  select(carat,cut,price)
```

